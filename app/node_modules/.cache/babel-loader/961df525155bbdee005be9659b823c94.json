{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\CENT\\\\Desktop\\\\joa\\\\app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\CENT\\\\Desktop\\\\joa\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\CENT\\\\Desktop\\\\joa\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\CENT\\\\Desktop\\\\joa\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar Api =\n/*#__PURE__*/\nfunction () {\n  function Api() {\n    _classCallCheck(this, Api);\n  }\n\n  _createClass(Api, [{\n    key: \"getAll\",\n    value: function () {\n      var _getAll = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(Api.API_URL, \"/tasks\")).then(function (response) {\n                  return response.json();\n                }).then(function (response) {\n                  return response.response.map(function (element) {\n                    return {\n                      id: element.$loki,\n                      created: element.meta.created,\n                      title: element.title,\n                      responsible: element.responsible,\n                      description: element.description,\n                      priority: element.priority\n                    };\n                  });\n                });\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getAll() {\n        return _getAll.apply(this, arguments);\n      }\n\n      return getAll;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id, callback, errorCallback) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"\".concat(Api.API_URL, \"/tasks/\").concat(id), {\n                  method: 'DELETE'\n                }).then(function (item) {\n                  callback && callback();\n                }, function (error) {\n                  errorCallback && errorCallback(error.message);\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function _delete(_x, _x2, _x3) {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }, {\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(task, callback) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetch(\"\".concat(Api.API_URL, \"/tasks\"), {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(task)\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (response) {\n                  return {\n                    id: response.response.$loki,\n                    created: response.response.meta.created,\n                    title: response.response.title,\n                    responsible: response.response.responsible,\n                    description: response.response.description,\n                    priority: response.response.priority\n                  };\n                }).then(function (response) {\n                  callback && callback(response);\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function create(_x4, _x5) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }], [{\n    key: \"API_URL\",\n    get: function get() {\n      return 'http://localhost:8080';\n    }\n  }]);\n\n  return Api;\n}();\n\nexport default Api;","map":{"version":3,"sources":["C:\\Users\\CENT\\Desktop\\joa\\app\\src\\Api.js"],"names":["Api","fetch","API_URL","then","response","json","map","element","id","$loki","created","meta","title","responsible","description","priority","callback","errorCallback","method","item","error","message","task","headers","body","JSON","stringify"],"mappings":";;;;;IAAMA,G;;;;;;;;;;;;;;;;;;uBAOeC,KAAK,WAAID,GAAG,CAACE,OAAR,YAAL,CACZC,IADY,CACN,UAAAC,QAAQ;AAAA,yBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,iBADF,EAEZF,IAFY,CAEN,UAAAC,QAAQ;AAAA,yBAAIA,QAAQ,CAACA,QAAT,CAAkBE,GAAlB,CAAuB,UAAAC,OAAO,EAAI;AACjD,2BAAO;AACHC,sBAAAA,EAAE,EAAED,OAAO,CAACE,KADT;AAEHC,sBAAAA,OAAO,EAAEH,OAAO,CAACI,IAAR,CAAaD,OAFnB;AAGHE,sBAAAA,KAAK,EAAEL,OAAO,CAACK,KAHZ;AAIHC,sBAAAA,WAAW,EAAEN,OAAO,CAACM,WAJlB;AAKHC,sBAAAA,WAAW,EAAEP,OAAO,CAACO,WALlB;AAMHC,sBAAAA,QAAQ,EAAER,OAAO,CAACQ;AANf,qBAAP;AAQH,mBATkB,CAAJ;AAAA,iBAFF,C;;;;;;;;;;;;;;;;;;;;;;;;iDAcJP,E,EAAGQ,Q,EAASC,a;;;;;;uBACfhB,KAAK,WAAID,GAAG,CAACE,OAAR,oBAAyBM,EAAzB,GAA8B;AACrCU,kBAAAA,MAAM,EAAE;AAD6B,iBAA9B,CAAL,CAEHf,IAFG,CAEG,UAAAgB,IAAI,EAAI;AACdH,kBAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACF,iBAJK,EAIF,UAAAI,KAAK,EAAI;AACTH,kBAAAA,aAAa,IAAIA,aAAa,CAACG,KAAK,CAACC,OAAP,CAA9B;AACH,iBANK,C;;;;;;;;;;;;;;;;;;;;;iDASGC,I,EAAKN,Q;;;;;;uBACRf,KAAK,WAAID,GAAG,CAACE,OAAR,aAAwB;AAC/BgB,kBAAAA,MAAM,EAAE,MADuB;AAE/BK,kBAAAA,OAAO,EAAC;AACJ,oCAAgB;AADZ,mBAFuB;AAK/BC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AALyB,iBAAxB,CAAL,CAOLnB,IAPK,CAOC,UAAAC,QAAQ;AAAA,yBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,iBAPT,EAQLF,IARK,CAQC,UAAAC,QAAQ,EAAI;AACf,yBAAO;AACHI,oBAAAA,EAAE,EAAEJ,QAAQ,CAACA,QAAT,CAAkBK,KADnB;AAEHC,oBAAAA,OAAO,EAAEN,QAAQ,CAACA,QAAT,CAAkBO,IAAlB,CAAuBD,OAF7B;AAGHE,oBAAAA,KAAK,EAAER,QAAQ,CAACA,QAAT,CAAkBQ,KAHtB;AAIHC,oBAAAA,WAAW,EAAET,QAAQ,CAACA,QAAT,CAAkBS,WAJ5B;AAKHC,oBAAAA,WAAW,EAAEV,QAAQ,CAACA,QAAT,CAAkBU,WAL5B;AAMHC,oBAAAA,QAAQ,EAAEX,QAAQ,CAACA,QAAT,CAAkBW;AANzB,mBAAP;AAQH,iBAjBK,EAkBLZ,IAlBK,CAkBC,UAAAC,QAAQ,EAAI;AACfY,kBAAAA,QAAQ,IAAIA,QAAQ,CAACZ,QAAD,CAApB;AACH,iBApBK,C;;;;;;;;;;;;;;;;;;wBA9BU;AAChB,aAAO,uBAAP;AACH;;;;;;AAqDL,eAAeJ,GAAf","sourcesContent":["class Api{\n\n    static get API_URL(){\n        return 'http://localhost:8080'\n    }\n\n    async getAll(){\n        return await fetch(`${Api.API_URL}/tasks`)\n        .then( response => response.json())\n        .then( response => response.response.map( element => {\n            return {\n                id: element.$loki,\n                created: element.meta.created,\n                title: element.title,\n                responsible: element.responsible,\n                description: element.description,\n                priority: element.priority\n            }\n        } ) )\n    }\n\n    async delete(id,callback,errorCallback){\n        await fetch(`${Api.API_URL}/tasks/${id}`,{\n            method: 'DELETE'\n        }).then( item => {\n           callback && callback()\n        } , error => {\n            errorCallback && errorCallback(error.message)\n        })\n    }\n\n    async create(task,callback){\n        await fetch(`${Api.API_URL}/tasks`,{\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(task)\n        })\n        .then( response => response.json())\n        .then( response => {\n            return {\n                id: response.response.$loki,\n                created: response.response.meta.created,\n                title: response.response.title,\n                responsible: response.response.responsible,\n                description: response.response.description,\n                priority: response.response.priority\n            }\n        })\n        .then( response => {\n            callback && callback(response)\n        } )\n\n    }\n}\n\nexport default Api"]},"metadata":{},"sourceType":"module"}